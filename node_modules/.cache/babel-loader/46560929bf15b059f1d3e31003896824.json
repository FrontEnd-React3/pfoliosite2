{"ast":null,"code":"var _jsxFileName = \"/Users/ben/Desktop/myself/pfoliosite-custom/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { InfoData, InfoDataTwo } from \"./data/InfoData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = document.getElementById(\"root\");\nconst modalRoot = document.getElementById(\"modal-root\");\n\nclass Modal extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100%',\n        display: 'grid',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          maxWidth: 400,\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"My App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This is an example of how you might use React.createPortal. I think it is a pretty neat API that is yet another awesome escape hatch that React provides for practical reasons. Sometimes you just need to render something completely outside the React Tree.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleShowMessageClick,\n          children: \"Show Secret Modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), this.state.showModal ? /*#__PURE__*/_jsxDEV(Modal, {\n          onClose: this.handleCloseModal,\n          children: \"This is the secret modal message!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 49,\n  columnNumber: 17\n}, this), root); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/Users/ben/Desktop/myself/pfoliosite-custom/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","InfoData","InfoDataTwo","root","document","getElementById","modalRoot","Modal","Component","render","height","display","justifyContent","alignItems","maxWidth","position","handleShowMessageClick","state","showModal","handleCloseModal"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,iBAAtC;;AAEA,MAAMC,IAAI,GAAKC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAf;AACA,MAAMC,SAAS,GAAKF,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAApB;;AACA,MAAME,KAAN,SAAoBV,KAAK,CAACW,SAA1B,CAAmC;AACjCC,EAAAA,MAAM,GAAG;AACP,wBACE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAE,MADH;AAELC,QAAAA,OAAO,EAAE,MAFJ;AAGLC,QAAAA,cAAc,EAAE,QAHX;AAILC,QAAAA,UAAU,EAAE;AAJP,OADT;AAAA,6BAQE;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,QAAQ,EAAE,GADL;AAELC,UAAAA,QAAQ,EAAE;AAFL,SADT;AAAA,gCAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAaE;AAAQ,UAAA,OAAO,EAAE,KAAKC,sBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,EAgBG,KAAKC,KAAL,CAAWC,SAAX,gBACC,QAAC,KAAD;AAAO,UAAA,OAAO,EAAE,KAAKC,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,GAIG,IApBN;AAAA;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,YADF;AAiCD;;AAnCgC;;AAsCnCrB,QAAQ,CAACW,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBN,IAAzB,E,CAGA;AACA;AACA;;AACAH,eAAe","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport { InfoData, InfoDataTwo } from \"./data/InfoData\";\n\nconst root =   document.getElementById(\"root\")\nconst modalRoot =   document.getElementById(\"modal-root\")\nclass Modal extends React.Component{\n  render() {\n    return (\n      <div\n        style={{\n          height: '100%',\n          display: 'grid',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <div\n          style={{\n            maxWidth: 400,\n            position: 'relative',\n          }}\n        >\n          <h1>My App</h1>\n          <p>\n            This is an example of how you might use React.createPortal. I think\n            it is a pretty neat API that is yet another awesome escape hatch\n            that React provides for practical reasons. Sometimes you just need\n            to render something completely outside the React Tree.\n          </p>\n          <button onClick={this.handleShowMessageClick}>\n            Show Secret Modal\n          </button>\n          {this.state.showModal ? (\n            <Modal onClose={this.handleCloseModal}>\n              This is the secret modal message!\n            </Modal>\n          ) : null}\n        </div>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<App />, root)\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}